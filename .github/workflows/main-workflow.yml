name: Main workflow

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  install:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [14, 16, 18]
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}

      - run: npm install -g npm@8
      - run: npm --version

      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-
            ${{ runner.OS }}-

      - name: Install dependencies
        run: npm ci

      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dependencies-${{ matrix.node-version }}
          path: |
            node_modules
            .npm

  pack-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [14, 16, 18]
    needs: [install]
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}

      - run: npm install -g npm@8
      - run: npm --version

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: dependencies-${{ matrix.node-version }}

      - name: Build
        run: npm run build

      - name: Pack build
        run: echo "pack_name=$(npm pack | tail -n 1)" >> $GITHUB_ENV

      - name: Pack tests
        run: |
          cp ./${{ env.pack_name }} ./test-publish
          cd ./test-publish
          npm install ./${{ env.pack_name }}

    env:
      CI: true

  stryker-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [14, 16, 18]
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}

      - run: npm install -g npm@8
      - run: npm --version

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: dependencies-${{ matrix.node-version }}

      - name: Stryker tests
        run: npm run stryker

    env:
      CI: true

  unit-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [14, 16, 18]
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}

      - run: npm install -g npm@8
      - run: npm --version

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: dependencies-${{ matrix.node-version }}

      - name: Linter
        run: npm run lint

      - name: Unit tests
        run: npm run test -- --ci --coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
    env:
      CI: true

  e2e-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        browser: [chrome, firefox]
        node: [14, 16, 18]
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}

      - run: npm install -g npm@8
      - run: npm --version

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: dependencies-${{ matrix.node-version }}

      - name: Cypress run
        uses: cypress-io/github-action@v5.0.9
        with:
          browser: ${{ matrix.browser }}
          headed: true
          build: npm run build
          start: npm run serve:e2e
          wait-on: 'http://localhost:1234'
    env:
      CI: true

  release:
    if: github.event_name == 'push'
    needs: [unit-tests, e2e-tests, install]
    name: release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [14, 16, 18]

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - run: npm install -g npm@8
      - run: npm --version

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: dependencies-${{ matrix.node-version }}

      - name: Build
        run: npm run build

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm run semantic-release
