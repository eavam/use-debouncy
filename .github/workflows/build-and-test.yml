name: Build and Test

on:
  push:
    branches:
      - main
      - beta
  pull_request:

permissions:
  contents: read # for checkout

jobs:
  build-and-test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    env:
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache Node.js modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      - name: Install dependencies
        run: yarn install --immutable

      - name: Install Playwright Browsers
        run: npx -y playwright@1.52.0 install --with-deps

      - name: Build application
        run: yarn build

      - name: Run Biome linting
        run: yarn biome ci .

      - name: Run all tests (Playwright component tests)
        run: yarn test

      - name: Upload Playwright test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: |
            playwright-report/
            test-results/
          retention-days: 30

      - name: Pack build
        run: yarn pack -o use-debouncy-pack.tgz

      - name: Install packed package
        run: npm install ../use-debouncy-pack.tgz
        working-directory: test-publish

      - name: Archive build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            lib
            use-debouncy-pack.tgz

  release:
    runs-on: ubuntu-latest
    needs: ['build-and-test']
    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
      id-token: write # to enable use of OIDC for npm provenance
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: yarn install

      - name: Build application
        run: yarn build

      - name: Verify authentication
        run: |
          git config --global user.name github-actions
          git config --global user.email github-actions@github.com
          yarn npm whoami --publish

      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-artifacts
          path: |
            lib

      - name: Release
        run: |
          if [ "${{ github.ref }}" = "refs/heads/main" ]; then
            echo "Running release for main branch..."
            if npx should-semantic-release; then
              echo "Changes found that require a release. Running release-it..."
              yarn release --ci
            else
              echo "No changes found that require a release. Skipping release."
              exit 0
            fi
          else
            echo "Running dry-run release for other branches..."
            yarn release --ci --dry-run --no-git.commit --no-git.tag --no-git.push --no-github.release
          fi
